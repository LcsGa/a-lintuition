@layer reset, theme, base, feature, app;

@import './styles/theme.css' layer(theme);

@import 'https://unpkg.com/open-props' layer(base);

@import './styles/header.css' layer(feature);

@layer reset {
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    text-wrap: pretty;
  }

  ul {
    list-style: none;
  }

  a {
    text-decoration: none;
  }

  q {
    quotes: none;
  }
}

@layer base {
  body {
    min-block-size: 100dvh;
    background-color: var(--color-surface);
    color: var(--color-text);
  }

  h1 {
    font-size: var(--font-size-8);
  }

  :is(h1, h2, h3, h4, h5, h6, q) {
    font-family: var(--font-heading);
    font-weight: var(--font-weight-7);
    color: var(--color-heading);

    :not(&) {
      font-family: var(--text-font-family);
      font-size: var(--text-font-size);
      color: var(--color-text);
    }
  }
}

@layer app {
  header {
    position: fixed;
    inset-inline: 0;
  }

  #landing {
    --section-block-size: 100dvh;
    --section-block-start-gutter: calc(var(--size-10) + var(--size-4));
    --section-gutter: var(--size-3);
    block-size: var(--section-block-size);
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    padding: var(--section-block-start-gutter) var(--section-gutter) var(--section-gutter);

    div {
      inline-size: calc(var(--section-block-size) - var(--section-block-start-gutter) - var(--section-gutter));

      img {
        max-inline-size: 100%;
        max-block-size: 100%;
      }
    }

    q {
      color: var(--color-graphics);
      font-size: clamp(var(--font-size-8), 8vw, calc(2 * var(--font-size-8)));
    }
  }
}
